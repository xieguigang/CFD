declare module "barrier" {
    export interface barrier {
        name: string;
        locations: number[];
    }
    export const barrierList: barrier[];
}
declare const mobile: RegExpMatchArray;
declare const canvas: HTMLCanvasElement;
declare const context: CanvasRenderingContext2D;
declare const image: ImageData;
declare var sizeSelect: HTMLSelectElement;
declare var pxPerSquare: number;
declare var xdim: number;
declare var ydim: number;
declare var stepsSlider: HTMLInputElement;
declare var startButton: HTMLInputElement;
declare var speedSlider: HTMLInputElement;
declare var speedValue: HTMLInputElement;
declare var viscSlider: HTMLInputElement;
declare var viscValue: HTMLInputElement;
declare var mouseSelect: HTMLSelectElement;
declare var barrierSelect: HTMLSelectElement;
declare var plotSelect: HTMLSelectElement;
declare var contrastSlider: HTMLInputElement;
declare var tracerCheck: HTMLInputElement;
declare var flowlineCheck: HTMLInputElement;
declare var forceCheck: HTMLInputElement;
declare var sensorCheck: HTMLInputElement;
declare var dataCheck: HTMLInputElement;
declare var rafCheck: HTMLInputElement;
declare var speedReadout: HTMLElement;
declare var dataSection: HTMLElement;
declare var dataArea: HTMLElement;
declare var dataButton: HTMLInputElement;
declare var running: boolean;
declare var stepCount: number;
declare var startTime: number;
declare var four9ths: number;
declare var one9th: number;
declare var one36th: number;
declare var barrierCount: number;
declare var barrierxSum: number;
declare var barrierySum: number;
declare var barrierFx: number;
declare var barrierFy: number;
declare var sensorX: number;
declare var sensorY: number;
declare var draggingSensor: boolean;
declare var mouseIsDown: boolean;
declare var mouseX: any, mouseY: any;
declare var oldMouseX: number, oldMouseY: number;
declare var collectingData: boolean;
declare var time: number;
declare var showingPeriod: boolean;
declare var lastBarrierFy: number;
declare var lastFyOscTime: number;
declare var n0: any[];
declare var nN: any[];
declare var nS: any[];
declare var nE: any[];
declare var nW: any[];
declare var nNE: any[];
declare var nSE: any[];
declare var nNW: any[];
declare var nSW: any[];
declare var rho: number[];
declare var ux: any[];
declare var uy: any[];
declare var curl: any[];
declare var barrier: any[];
declare var barrierSize: number;
declare var nColors: number;
declare var hexColorList: any[];
declare var redList: any[];
declare var greenList: any[];
declare var blueList: any[];
declare function componentToHex(c: any): any;
declare function rgbToHex(r: any, g: any, b: any): string;
declare var transBlackArraySize: number;
declare var transBlackArray: any[];
declare var nTracers: number;
declare var tracerX: any[];
declare var tracerY: any[];
declare const requestAnimFrame: (callback: () => void) => void;
declare function simulate(): void;
declare function setBoundaries(): void;
declare function collide(): void;
declare function stream(): void;
declare function moveTracers(): void;
declare function push(pushX: any, pushY: any, pushUX: any, pushUY: any): void;
declare function setEquil(x: number, y: number, newux: number, newuy: number, newrho?: number): void;
declare function initTracers(): void;
declare function paintCanvas(): void;
declare function colorSquare(x: any, y: any, r: any, g: any, b: any): void;
declare function computeCurl(): void;
declare function drawTracers(): void;
declare function drawFlowlines(): void;
declare function drawForceArrow(x: any, y: any, Fx: any, Fy: any): void;
declare function drawSensor(): void;
declare function mouseDown(e: any): void;
declare function mouseMove(e: any): void;
declare function mouseUp(e: any): void;
declare function mousePressDrag(e: any): void;
declare function pageToCanvas(pageX: any, pageY: any): {
    x: number;
    y: number;
};
declare function canvasToGrid(canvasX: any, canvasY: any): {
    x: number;
    y: number;
};
declare function addBarrier(x: any, y: any): void;
declare function removeBarrier(x: any, y: any): void;
declare function clearBarriers(): void;
declare function resize(): void;
declare function initFluid(): void;
declare function startStop(): void;
declare function resetTimer(): void;
declare function adjustSpeed(): void;
declare function adjustViscosity(): void;
declare function showData(): void;
declare function startOrStopData(): void;
declare function writeData(): void;
declare function showPeriod(): void;
declare function showBarrierLocations(): void;
declare function placePresetBarrier(): void;
declare function debug(): void;
